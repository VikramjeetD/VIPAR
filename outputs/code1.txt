Token: func; Lexeme: TK_FUNC; Line: 1
Token: main; Lexeme: TK_IDF; Line: 1
Token: (; Lexeme: TK_PARO; Line: 1
Token: ); Lexeme: TK_PARC; Line: 1
Token: {; Lexeme: TK_BRO; Line: 1
Token: var; Lexeme: TK_VARDEC; Line: 2
Token: wrapit; Lexeme: TK_IDF; Line: 2
Token: :; Lexeme: TK_COL; Line: 2
Token: string; Lexeme: TK_STYPE; Line: 2
Token: =; Lexeme: TK_EQ; Line: 2
Token: 'see how this string wraps its soo cooooooool!'; Lexeme: TK_STR; Line: 9
Token: ;; Lexeme: TK_SCOL; Line: 9
Token: var; Lexeme: TK_VARDEC; Line: 10
Token: x; Lexeme: TK_IDF; Line: 10
Token: :; Lexeme: TK_COL; Line: 10
Token: int; Lexeme: TK_ITYPE; Line: 10
Token: =; Lexeme: TK_EQ; Line: 10
Token: syntaxerror; Lexeme: TK_IDF; Line: 10
Token: ;; Lexeme: TK_SCOL; Line: 10
Token: var; Lexeme: TK_VARDEC; Line: 11
Token: y; Lexeme: TK_IDF; Line: 11
Token: :; Lexeme: TK_COL; Line: 11
Token: float; Lexeme: TK_IDF; Line: 11
Token: =; Lexeme: TK_EQ; Line: 11
Token: 1.2; Lexeme: TK_REAL; Line: 11
Token: ;; Lexeme: TK_SCOL; Line: 11
Token: if; Lexeme: TK_IF; Line: 12
Token: (; Lexeme: TK_PARO; Line: 12
Token: (; Lexeme: TK_PARO; Line: 12
Token: x; Lexeme: TK_IDF; Line: 12
Token: ==; Lexeme: TK_EQLB; Line: 12
Token: 23; Lexeme: TK_INT; Line: 12
Token: &&; Lexeme: TK_LAND; Line: 12
Token: y; Lexeme: TK_IDF; Line: 12
Token: <; Lexeme: TK_LT; Line: 12
Token: 5; Lexeme: TK_INT; Line: 12
Token: ); Lexeme: TK_PARC; Line: 12
Token: ||; Lexeme: TK_LOR; Line: 12
Token: y; Lexeme: TK_IDF; Line: 12
Token: >; Lexeme: TK_GT; Line: 12
Token: 5; Lexeme: TK_INT; Line: 12
Token: ); Lexeme: TK_PARC; Line: 12
Token: {; Lexeme: TK_BRO; Line: 12
Token: print; Lexeme: TK_IDF; Line: 13
Token: (; Lexeme: TK_PARO; Line: 13
Token: 'i like syntax errors'; Lexeme: TK_STR; Line: 13
Token: ); Lexeme: TK_PARC; Line: 13
Token: ;; Lexeme: TK_SCOL; Line: 13
Token: }; Lexeme: TK_BRC; Line: 14
Token: }; Lexeme: TK_BRC; Line: 15