S -> PROGRAM
PROGRAM -> PREMAINDECLARATIONS MAINFUNC FUNCLIST
PREMAINDECLARATIONS -> ''
PREMAINDECLARATIONS -> DECLARATION ; PREMAINDECLARATIONS
MAINFUNC -> func main ( ) { STMTLIST }
STMTLIST -> STMT STMTLIST
STMTLIST -> ''
STMT -> CONDITIONAL
STMT -> LOOP
STMT -> DECLARATION ;
STMT -> ASSIGNMENT ;
STMT -> FUNCCALL ;
CONDITIONAL -> IF
CONDITIONAL -> SWITCH
IF -> if ( CONDITION ) { STMTLIST } ELSEIFS OPTELSE
OPTELSE -> else { STMTLIST }
OPTELSE -> ''
ELSEIFS -> elif ( CONDITION ) { STMTLIST } ELSEIFS
ELSEIFS -> ''
SWITCH -> switch ( EXPR ) { CASES }
CASES -> CASE CASES
CASES -> ''
CASE -> case EXPR { STMTLIST }
LOOP -> FORLOOP
LOOP -> WHILELOOP
FORLOOP -> for variable in variable LOOPOP variable OPTSTEP { STMTLIST }
LOOPOP -> ...
LOOPOP -> ..<
OPTSTEP -> step variable
OPTSTEP -> ''
WHILELOOP -> while ( CONDITION ) { STMTLIST }
DECLARATION -> var VARDECLLIST
VARDECLLIST -> variable : VARTYPE OPTASSIGNRHS MOREDECLS
MOREDECLS -> , variable : VARTYPE OPTASSIGNRHS MOREDECLS
MOREDECLS -> ''
OPTASSIGNRHS -> = ASSIGNRHS
OPTASSIGNRHS -> ''
ASSIGNMENT -> variable = ASSIGNRHS
ASSIGNRHS -> EXPR
ASSIGNRHS -> EXPR if CONDITION else EXPR
FUNCCALL -> FUNCCALLRHS
FUNCCALLRHS -> funcname ( ACTPARAMLIST )
ACTPARAMLIST -> ''
ACTPARAMLIST -> VAROREXP MOREPARAMS
MOREPARAMS -> , VAROREXP MOREPARAMS
MOREPARAMS -> ''
VAROREXP -> EXPR
FUNCLIST -> FUNC FUNCLIST
FUNCLIST -> ''
FUNC -> func funcname ( FUNCPARAMLIST ) arrow VARTYPE { FUNCSTMT }
FUNCSTMT -> STMTLIST OPTRETURN
OPTRETURN -> return EXPR ;
OPTRETURN -> ''
FUNCPARAMLIST -> FUNCPARAMS
FUNCPARAMLIST -> ''
FUNCPARAMS -> variable : VARTYPE MOREFUNCPARAMS
MOREFUNCPARAMS -> , variable : VARTYPE MOREFUNCPARAMS
MOREFUNCPARAMS -> ''
VARTYPELIST -> VARTYPE
VARTYPELIST -> void
CONDITION -> SCONDITION & SCONDITION
CONDITION -> SCONDITION | SCONDITION
CONDITION -> ! SCONDITION
CONDITION -> SCONDITION
SCONDITION -> EXPR RELOP EXPR
SCONDITION -> ( CONDITION )
RELOP -> <
RELOP -> >
RELOP -> <=
RELOP -> >=
RELOP -> ==
RELOP -> !=
EXPR -> SUBEXPR + SUBEXPR
EXPR -> SUBEXPR - SUBEXPR
EXPR -> SUBEXPR * SUBEXPR
EXPR -> SUBEXPR / SUBEXPR
EXPR -> SUBEXPR ^ SUBEXPR
EXPR -> SUBEXPR % SUBEXPR
EXPR -> ! SUBEXPR
EXPR -> SUBEXPR
SUBEXPR -> variable
SUBEXPR -> ( EXPR )
SUBEXPR -> FUNCCALLRHS
VARTYPE -> int
VARTYPE -> real
VARTYPE -> string